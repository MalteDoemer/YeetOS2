AS = nasm -f elf32
LD = ld.lld
CC = clang --target=i686-pc-none-elf
CXX = clang++ --target=i686-pc-none-elf
AR = llvm-ar

# LD = i686-elf-ld
# CC = i686-elf-gcc
# CXX = i686-elf-g++

C_FLAGS := \
-Wall \
-ffreestanding \
-nostdlib \
-std=c99 \
-march=i686 \

CXX_FLAGS := \
-Wall \
-ffreestanding \
-nostdlib \
-std=c++2a \
-fno-exceptions \
-march=i686 \


ifdef THIN_LTO
CXX_FLAGS := $(CXX_FLAGS) -emit-llvm -flto=thin
endif

LD_FLAGS := \
--script $(TOPDIR)/Arch/$(ARCH)/Link.ld \
--format elf \
--oformat elf \
--no-dynamic-linker\
--nostdlib \
--whole-archive \
-melf_i386 \


AS_FLAGS :=


ifdef DEBUG
C_FLAGS := -ggdb $(C_FLAGS)
CXX_FLAGS := -ggdb $(CXX_FLAGS)
else 
C_FLAGS := -ggdb -O2 $(C_FLAGS)
CXX_FLAGS := -ggdb -O2 $(CXX_FLAGS)
endif
